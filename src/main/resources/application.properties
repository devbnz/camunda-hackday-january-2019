# Spring Application
spring.application.name=hackday
server.port=${APPLICATION_PORT:8080}

# Database connection
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:test;MODE=PostgreSQL
spring.datasource.username=test
spring.datasource.password=test
spring.jpa.database=HSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

#default is 10
spring.datasource.hikari.maximum-pool-size=3

# To avoid an exception "Die Methode org.postgresql.jdbc.PgConnection.createClob() ist noch nicht implementiert."
# HHH-12368
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Configure Jackson
spring.jackson.deserialization.read-unknown-enum-values-as-null=true
spring.jackson.deserialization.fail-on-unknown-properties=true

#  Monitoring
management.endpoints.enabled-by-default=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.health=health

# Environment using spring profile
spring.profiles.active=${APPLICATION_PROFILE:dev}

# Camunda
camunda.bpm.enabled=${CAMUNDA_ENABLED:true}
camunda.bpm.auto-deployment-enabled=true
camunda.bpm.webapp.index-redirect-enabled = false
camunda.bpm.admin-user.id=${CAMUNDA_USER:admin}
camunda.bpm.admin-user.password=${CAMUNDA_PASSWORD:admin}
camunda.bpm.database.schema-update=true
camunda.bpm.database.type=postgres
#camunda.bpm.database.schema-name=camunda
#camunda.bpm.database.table-prefix=camunda.

# Webmerge
application.document.webmerge.api.url=${WEBMERGE_URL:https://www.webmerge.me}
application.document.webmerge.api.key=${WEBMERGE_KEY:QSQB1P3WJ3VE89CBIXJ8HSQVE3NM}
application.document.webmerge.api.secret=${WEBMERGE_SECRET:LUKGUR5Y}